using System;
using System.Collections.Generic;
using Whiskey2D.Core;
using Whiskey2D.Core.Managers;
using Whiskey2D.Core.Inputs;
using Microsoft.Xna.Framework.Input;
using Microsoft.Xna.Framework.Audio;

//auto-generated by Whiskey2D
namespace Project
{
	[Serializable] 
	public class WaterParticle : GameObject
	{
		#region AUTO-GENERATED BY WHISKEY2D. DO NOT EDIT. (please)
		public Vector Velocity { get; set; } 
		public Vector Acceleration { get; set; } 
		public Boolean EffectWater { get; set; } 

		#region INIT_VALUE_ASSIGNMENT
		protected override void initProperties()
		{
			X = 0f;
			Y = 0f;
			Sprite = new Sprite("gradient2.png", new Vector(0.5f, 0.5f), new Vector(0f, 0f), 0.5f, new Color(255, 255, 255, 255), 0f);
			Light = new Light(new Vector(0f, 0f), new Color(255, 255, 255, 255), 512f, false);
			Shadows = new ShadowProperties(false, true, false, 1f, 100f);
			Name = "???";
			Active = true;
			HudObject = false;
			IsDebug = false;
			Layer = null;
			Velocity = new Vector(0f, 0f);
			Acceleration = new Vector(0f, 0f);
			EffectWater = false;
		}
		#endregion

		public WaterParticle( ObjectManager objMan ) : base (objMan) { }
		#region INIT_SCRIPTS
		protected override void addInitialScripts()
		{
			base.addScript( new WaterParticleMotion() );
		}
		#endregion

		#endregion END OF AUTO-GENERATED CODE.

		public override void initializeObject()
		{
			//implement your code here!
		}
		
		public static void makeSplash(Vector spot, int count, Vector direction, float scale, float spread, bool effectWater){
			for (int i = 0 ; i < count ; i ++){
				WaterParticle wp = new WaterParticle(GameManager.Level);
				wp.Layer = GameManager.Level.getLayer("Water");
				wp.Position = spot + Rand.Instance.nextUnit2() * 10;
				//wp.Acceleration = direction;
				wp.Acceleration = direction.Length * Vector.from((direction.Angle + (-spread/2 + spread*Rand.Instance.nextFloat())), Vector.One);
				wp.Acceleration *= 1 + .05f * Rand.Instance.nextFloat();
				wp.Sprite.Scale *= scale;
				wp.EffectWater = effectWater;
			}
		}

	}
}




























