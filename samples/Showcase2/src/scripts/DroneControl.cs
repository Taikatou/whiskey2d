using System;
using System.Collections.Generic;
using Whiskey2D.Core;
using Whiskey2D.Core.Managers;
using Whiskey2D.Core.Inputs;
using Microsoft.Xna.Framework.Input;
using Microsoft.Xna.Framework.Audio;

//auto-generated by Whiskey2D
namespace Project
{
	[Serializable] 
	public class DroneControl : Script<Drone>
	{
	
		GameObject target;
		Wall lastWall;
		Wall targetWall;
		
		SimpleObject vis;
		Animation a;
		
		public override void onStart()
		{
		
			target = Objects.getObject(Gob.Target);
			if (Gob.WallName.Length > 1){
				targetWall = Objects.getObject<Wall>(Gob.WallName);
			}
			
			Gob.Sprite.Visible = false;
			vis = new SimpleObject(Level);
			vis.Sprite.ImagePath = "blob3.png";
			vis.Sprite.Rows = 5;
			vis.Sprite.Columns = 4;
			vis.Sprite.Scale = Vector.One;
			vis.Sprite.Color = Gob.Sprite.Color;
			vis.Sprite.Depth = .6f;
			a = vis.Sprite.createAnimation(0,19, 5, true);
			
		}
		
		public override void onUpdate() 
		{

			Gob.Acceleration = Vector.UnitY;


			float x = Math.Sign(target.X - Gob.X);
			
			

			if (lastWall != null && ((targetWall == lastWall) || targetWall == null)){
				if (Gob.Bounds.Right +x > lastWall.Bounds.Right){
					Gob.Acceleration = new Vector(0, Gob.Acceleration.Y);
					Gob.Velocity = Vector.Zero;
					Gob.X = lastWall.Bounds.Right - Gob.Bounds.Size.X/2;
				} else if (Gob.Bounds.Left +x < lastWall.Bounds.Left){
					Gob.Acceleration = new Vector(0, Gob.Acceleration.Y);
					Gob.Velocity = Vector.Zero;
					Gob.X = lastWall.Bounds.Left + Gob.Bounds.Size.X/2;
				
				} else {
					Gob.Acceleration += Vector.UnitX * x;
				}
			
			}


			Gob.Velocity += Gob.Acceleration;
			Gob.Velocity -= Gob.Velocity * .1f;
			
			Gob.Position += Gob.Velocity;

			vis.Position = Gob.Position + new Vector(0, 20);
			vis.Sprite.Scale = new Vector(x, 1);
			//if (Gob.Velocity.X != 0){
				a.advanceFrame();
			
			//}

			var wallColls = Gob.currentCollisions<Wall>();
			foreach (var wallColl in wallColls){
				Gob.Position -= wallColl.MTV;
				lastWall = wallColl.Gob;
			
			}

			
		}
		
		public override void onClose()  
		{
		 
		 	SpriteEffect boom = new SpriteEffect(Level);
		 
		 	boom.Effect = "bigBang";
		 	boom.Frames = new Vector(1, 48);
		 	boom.Position = Gob.Position;
		 	boom.Speed = -3;
		 	boom.Sprite.Scale *= 1.5f;
		 	
		 	vis.close();
		 	
		}
		
	}
}



















































































