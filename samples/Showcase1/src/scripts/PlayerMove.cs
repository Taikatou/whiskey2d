using System;
using System.Collections.Generic;
using Whiskey2D.Core;
using Whiskey2D.Core.Managers;
using Whiskey2D.Core.Inputs;
using Microsoft.Xna.Framework.Input;
using Microsoft.Xna.Framework.Audio;

//auto-generated by Whiskey2D
namespace Project
{
	[Serializable] 
	public class PlayerMove : Script<Player>
	{
		Vector surface = Vector.Zero;
		bool jumping = false;
		int jumpCounter = 0;
		Vector gravity = Vector.UnitY * 2;
		
		public override void onStart()
		{
		 //This code runs when the GameObject is initialized
		}
		
		public override void onUpdate() 
		{
			//Config conf = Objects.getObject<Config>("Config");
			
			
			Gob.Acceleration = Vector.Zero;
			Vector friction = new Vector(.08f, 0);
			
			if (Input.isKeyDown(Keys.A)){
				Gob.Acceleration -= Vector.UnitX;
			}
			if (Input.isKeyDown(Keys.D)){
				Gob.Acceleration += Vector.UnitX;
			}
			
			if (Input.isNewKeyDown(Keys.W)){
				if (surface.Y > .8f){
					jumping = true;
					jumpCounter = 40;
					Gob.Acceleration -= gravity * 12;
					
					
					SpriteEffect fx = new SpriteEffect(Level);
					fx.Position = Gob.Position + Vector.UnitY*Gob.Bounds.Size.Y /4;
					fx.Effect = "smokeJump";
					fx.Frames = Vector.One*4;
					fx.Sprite.Scale *= .3f;
					fx.Speed = 4;
					
				}
			}
			
			
			if (Input.isKeyDown(Keys.W)){
				if (jumping && jumpCounter > 0 ){
					Gob.Acceleration -= gravity * .02f * jumpCounter;
					jumpCounter --;
				}
			}
		
			Gob.Acceleration += gravity;
		
			Gob.Velocity += Gob.Acceleration;
			if (Gob.Velocity.Length > 55){
				Gob.Velocity = 55 * Gob.Velocity.Unit;
			}
			
			Gob.Velocity -= new Vector(Gob.Velocity.X * friction.X, Gob.Velocity.Y * friction.Y);
			Gob.Sprite.Scale = new Vector(50 + Math.Abs(Gob.Velocity.X*15), 256);
			
			Gob.Position += Gob.Velocity;
			
			Collisions<Wall> wallColls = Gob.currentCollisions<Wall>();
			
			surface = Vector.Zero;
			foreach (Collision<Wall> c in wallColls){
				Gob.Position -= c.MTV;
				
				Gob.Velocity = c.Normal.Perpendicular * c.Normal.Perpendicular.dot(Gob.Velocity);
				
				if (c.Normal.Y > .8f){
					surface = c.Normal;
				
					jumping = false;
				}
			}
			
			
		}
		
		public override void onClose()  
		{
		 //This code runs when the GameObject is closed
		}
		
	}
}











































